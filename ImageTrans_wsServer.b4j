AppType=StandardJava
Build1=Default,b4j.example
File1=certificate.jks
File2=translator.html
FileGroup1=Default Group
FileGroup2=Default Group
Group=Default Group
Library1=jcore
Library2=jserver
Library3=json
Library4=jstringutils
Library5=javaobject
Module1=CorsFilter
Module2=HttpsFilter
Module3=ImageTrans
Module4=ImageTransShared
Module5=IndexFilter
Module6=PrivateHeaderFilter
Module7=TranslateHandler
Module8=TranslatorHandler
NumberOfFiles=2
NumberOfLibraries=5
NumberOfModules=8
Version=9.8
@EndOfDesignText@
'Non-UI application (console / server application)
#Region Project Attributes 
	#CommandLineArgs:
	#MergeLibraries: True 
#End Region

Sub Process_Globals
	Public srvr As Server
	Public translated As Boolean=False
	Public success As Boolean
	Public outputPath As String
End Sub

Sub AppStart (Args() As String)
	srvr.Initialize("srvr")
	Dim jo As JavaObject = srvr
	jo.GetFieldJO("context").RunMethod("setMaxFormContentSize", Array(10*1000*1000))'in bytes
	ImageTransShared.Init
	srvr.Port = 51042
	srvr.StaticFilesFolder = File.DirApp
	srvr.AddWebSocket("/imagetrans", "ImageTrans")
	srvr.AddHandler("/translate","TranslateHandler",False)
	srvr.AddHandler("/translator","TranslatorHandler",False)
	srvr.AddFilter("/*","PrivateHeaderFilter",False)
	ConfigureCORS("/*", "*", "GET,POST,HEAD,OPTIONS", "X-Requested-With,Content-Type,Accept,Origin")
	ConfigureSSL(51043)
	srvr.Start
	StartMessageLoop
End Sub

Private Sub ConfigureSSL (SslPort As Int)
	'example of SSL connector configuration
	If File.Exists(File.DirApp, "certificate.jks") = False Then
		File.Copy(File.DirAssets,"certificate.jks",File.DirApp,"certificate.jks")
	End If
	Dim ssl As SslConfiguration
	ssl.Initialize
	ssl.SetKeyStorePath(File.DirApp, "certificate.jks") 'path to keystore file
	ssl.KeyStorePassword = "xulihang"
	ssl.KeyManagerPassword = "xulihang"
	srvr.SetSslConfiguration(ssl, SslPort)
	'srvr.AddFilter("/*","HttpsFilter",False)
End Sub

' allowedOrigins = "*" or "http://google.com"
' allowedMethods = "*" or "GET,POST,HEAD"
' allowedHeaders = "*" or "X-Requested-With,Content-Type,Accept,Origin"
Private Sub ConfigureCORS (Path As String, allowedOrigins As String, allowedMethods As String, allowedHeaders As String) 'ignore
	Dim cors As CorsFilter
	cors.Initialize(Path, CreateMap("allowedOrigins": allowedOrigins, _
    "allowedMethods": allowedMethods, _
    "allowedHeaders": allowedHeaders, _
    "allowCredentials": "true", _
    "preflightMaxAge": 1800, _
    "chainPreflight": "true"))
	cors.AddToServer(srvr)
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub